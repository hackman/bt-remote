#include "FastLED.h"  // Include FastLED Library
#define NUM_LEDS 256 //  The number of LEDS on matrix
#define DATA_PIN 3  //  Data-In of matrix
#define BRIGHTNESS 64
CRGB leds[NUM_LEDS];
char state;
int t=0;


void setup() {


  pinMode(DATA_PIN, OUTPUT);
  FastLED.addLeds<WS2812B, DATA_PIN, GRB>(leds, NUM_LEDS);
  Serial.begin(38400); 

}

void loop() {

  if(Serial.available() > 0){ // Checks whether data is comming from the serial port
    state = Serial.read();
  }
  if (state == 'L') { // X-Axis Left
    LeftArrowBlink();
  }
  if (state == 'R') { // X-Axis Right
    RightArrowBlink();
  }
  if (state == 'U') { // Y-Axis Up
    ExclamationMarkBlink();
  }
  if (state == 'D') { // Y-Axis Down
    RedSquareBlink();
  }
  if (state == 'N') { // Clear / Reset
    Clear();
  }
}


void LeftArrowBlink() { // Function that is called when Vx is <= 100 and shows a Left Blinking Arrow on the matrix

  while (state == 'L') {
  FastLED.clear();
leds [  6 ] = CRGB (0,255,0);
leds [  7 ] = CRGB (0,255,0);
leds [  8 ] = CRGB (0,255,0);
leds [  9 ] = CRGB (0,255,0);
leds [  10  ] = CRGB (0,255,0);
leds [  11  ] = CRGB (0,255,0);
leds [  12  ] = CRGB (0,255,0);
leds [  13  ] = CRGB (0,255,0);
leds [  14  ] = CRGB (0,255,0);
leds [  15  ] = CRGB (0,255,0);
leds [  16  ] = CRGB (0,255,0);
leds [  17  ] = CRGB (0,255,0);
leds [  18  ] = CRGB (0,255,0);
leds [  19  ] = CRGB (0,255,0);
leds [  20  ] = CRGB (0,255,0);
leds [  21  ] = CRGB (0,255,0);
leds [  22  ] = CRGB (0,255,0);
leds [  23  ] = CRGB (0,255,0);
leds [  24  ] = CRGB (0,255,0);
leds [  40  ] = CRGB (0,255,0);
leds [  41  ] = CRGB (0,255,0);
leds [  42  ] = CRGB (0,255,0);
leds [  43  ] = CRGB (0,255,0);
leds [  44  ] = CRGB (0,255,0);
leds [  45  ] = CRGB (0,255,0);
leds [  46  ] = CRGB (0,255,0);
leds [  47  ] = CRGB (0,255,0);
leds [  48  ] = CRGB (0,255,0);
leds [  49  ] = CRGB (0,255,0);
leds [  50  ] = CRGB (0,255,0);
leds [  51  ] = CRGB (0,255,0);
leds [  52  ] = CRGB (0,255,0);
leds [  53  ] = CRGB (0,255,0);
leds [  54  ] = CRGB (0,255,0);
leds [  72  ] = CRGB (0,255,0);
leds [  73  ] = CRGB (0,255,0);
leds [  74  ] = CRGB (0,255,0);
leds [  75  ] = CRGB (0,255,0);
leds [  76  ] = CRGB (0,255,0);
leds [  77  ] = CRGB (0,255,0);
leds [  78  ] = CRGB (0,255,0);
leds [  79  ] = CRGB (0,255,0);
leds [  80  ] = CRGB (0,255,0);
leds [  81  ] = CRGB (0,255,0);
leds [  82  ] = CRGB (0,255,0);
leds [  83  ] = CRGB (0,255,0);
leds [  84  ] = CRGB (0,255,0);
leds [  85  ] = CRGB (0,255,0);
leds [  86  ] = CRGB (0,255,0);
leds [  87  ] = CRGB (0,255,0);
leds [  88  ] = CRGB (0,255,0);
leds [  102 ] = CRGB (0,255,0);
leds [  103 ] = CRGB (0,255,0);
leds [  104 ] = CRGB (0,255,0);
leds [  105 ] = CRGB (0,255,0);
leds [  106 ] = CRGB (0,255,0);
leds [  107 ] = CRGB (0,255,0);
leds [  108 ] = CRGB (0,255,0);
leds [  109 ] = CRGB (0,255,0);
leds [  110 ] = CRGB (0,255,0);
leds [  111 ] = CRGB (0,255,0);
leds [  112 ] = CRGB (0,255,0);
leds [  113 ] = CRGB (0,255,0);
leds [  114 ] = CRGB (0,255,0);
leds [  116 ] = CRGB (0,255,0);
leds [  117 ] = CRGB (0,255,0);
leds [  118 ] = CRGB (0,255,0);
leds [  119 ] = CRGB (0,255,0);
leds [  120 ] = CRGB (0,255,0);
leds [  121 ] = CRGB (0,255,0);
leds [  122 ] = CRGB (0,255,0);
leds [  132 ] = CRGB (0,255,0);
leds [  133 ] = CRGB (0,255,0);
leds [  134 ] = CRGB (0,255,0);
leds [  135 ] = CRGB (0,255,0);
leds [  136 ] = CRGB (0,255,0);
leds [  137 ] = CRGB (0,255,0);
leds [  138 ] = CRGB (0,255,0);
leds [  142 ] = CRGB (0,255,0);
leds [  143 ] = CRGB (0,255,0);
leds [  144 ] = CRGB (0,255,0);
leds [  150 ] = CRGB (0,255,0);
leds [  151 ] = CRGB (0,255,0);
leds [  152 ] = CRGB (0,255,0);
leds [  153 ] = CRGB (0,255,0);
leds [  154 ] = CRGB (0,255,0);
leds [  155 ] = CRGB (0,255,0);
leds [  156 ] = CRGB (0,255,0);
leds [  162 ] = CRGB (0,255,0);
leds [  163 ] = CRGB (0,255,0);
leds [  164 ] = CRGB (0,255,0);
leds [  165 ] = CRGB (0,255,0);
leds [  166 ] = CRGB (0,255,0);
leds [  167 ] = CRGB (0,255,0);
leds [  168 ] = CRGB (0,255,0);
leds [  184 ] = CRGB (0,255,0);
leds [  185 ] = CRGB (0,255,0);
leds [  186 ] = CRGB (0,255,0);
leds [  187 ] = CRGB (0,255,0);
leds [  188 ] = CRGB (0,255,0);
leds [  189 ] = CRGB (0,255,0);
leds [  190 ] = CRGB (0,255,0);
leds [  192 ] = CRGB (0,255,0);
leds [  193 ] = CRGB (0,255,0);
leds [  194 ] = CRGB (0,255,0);
leds [  195 ] = CRGB (0,255,0);
leds [  196 ] = CRGB (0,255,0);
leds [  197 ] = CRGB (0,255,0);
leds [  198 ] = CRGB (0,255,0);
leds [  218 ] = CRGB (0,255,0);
leds [  219 ] = CRGB (0,255,0);
leds [  220 ] = CRGB (0,255,0);
leds [  221 ] = CRGB (0,255,0);
leds [  222 ] = CRGB (0,255,0);
leds [  226 ] = CRGB (0,255,0);
leds [  227 ] = CRGB (0,255,0);
leds [  228 ] = CRGB (0,255,0);
leds [  252 ] = CRGB (0,255,0);
   FastLED.show();
   delay(1000);
   FastLED.clear();
leds [  0 ] = CRGB (0,255,0);
leds [  1 ] = CRGB (0,255,0);
leds [  2 ] = CRGB (0,255,0);
leds [  3 ] = CRGB (0,255,0);
leds [  4 ] = CRGB (0,255,0);
leds [  5 ] = CRGB (0,255,0);
leds [  6 ] = CRGB (0,255,0);
leds [  7 ] = CRGB (0,255,0);
leds [  8 ] = CRGB (0,255,0);
leds [  9 ] = CRGB (0,255,0);
leds [  10  ] = CRGB (0,255,0);
leds [  11  ] = CRGB (0,255,0);
leds [  12  ] = CRGB (0,255,0);
leds [  13  ] = CRGB (0,255,0);
leds [  14  ] = CRGB (0,255,0);
leds [  15  ] = CRGB (0,255,0);
leds [  16  ] = CRGB (0,255,0);
leds [  17  ] = CRGB (0,255,0);
leds [  18  ] = CRGB (0,255,0);
leds [  19  ] = CRGB (0,255,0);
leds [  20  ] = CRGB (0,255,0);
leds [  21  ] = CRGB (0,255,0);
leds [  22  ] = CRGB (0,255,0);
leds [  23  ] = CRGB (0,255,0);
leds [  24  ] = CRGB (0,255,0);
leds [  25  ] = CRGB (0,255,0);
leds [  26  ] = CRGB (0,255,0);
leds [  27  ] = CRGB (0,255,0);
leds [  28  ] = CRGB (0,255,0);
leds [  29  ] = CRGB (0,255,0);
leds [  30  ] = CRGB (0,255,0);
leds [  31  ] = CRGB (0,255,0);
leds [  32  ] = CRGB (0,255,0);
leds [  33  ] = CRGB (0,255,0);
leds [  34  ] = CRGB (0,255,0);
leds [  35  ] = CRGB (0,255,0);
leds [  36  ] = CRGB (0,255,0);
leds [  37  ] = CRGB (0,255,0);
leds [  38  ] = CRGB (0,255,0);
leds [  39  ] = CRGB (0,255,0);
leds [  40  ] = CRGB (0,255,0);
leds [  41  ] = CRGB (0,255,0);
leds [  42  ] = CRGB (0,255,0);
leds [  43  ] = CRGB (0,255,0);
leds [  44  ] = CRGB (0,255,0);
leds [  45  ] = CRGB (0,255,0);
leds [  46  ] = CRGB (0,255,0);
leds [  47  ] = CRGB (0,255,0);
leds [  48  ] = CRGB (0,255,0);
leds [  49  ] = CRGB (0,255,0);
leds [  50  ] = CRGB (0,255,0);
leds [  51  ] = CRGB (0,255,0);
leds [  52  ] = CRGB (0,255,0);
leds [  53  ] = CRGB (0,255,0);
leds [  54  ] = CRGB (0,255,0);
leds [  55  ] = CRGB (0,255,0);
leds [  56  ] = CRGB (0,255,0);
leds [  57  ] = CRGB (0,255,0);
leds [  58  ] = CRGB (0,255,0);
leds [  59  ] = CRGB (0,255,0);
leds [  60  ] = CRGB (0,255,0);
leds [  61  ] = CRGB (0,255,0);
leds [  62  ] = CRGB (0,255,0);
leds [  63  ] = CRGB (0,255,0);
leds [  76  ] = CRGB (0,255,0);
leds [  77  ] = CRGB (0,255,0);
leds [  78  ] = CRGB (0,255,0);
leds [  79  ] = CRGB (0,255,0);
leds [  80  ] = CRGB (0,255,0);
leds [  81  ] = CRGB (0,255,0);
leds [  82  ] = CRGB (0,255,0);
leds [  83  ] = CRGB (0,255,0);
leds [  108 ] = CRGB (0,255,0);
leds [  109 ] = CRGB (0,255,0);
leds [  110 ] = CRGB (0,255,0);
leds [  111 ] = CRGB (0,255,0);
leds [  112 ] = CRGB (0,255,0);
leds [  113 ] = CRGB (0,255,0);
leds [  114 ] = CRGB (0,255,0);
leds [  115 ] = CRGB (0,255,0);
leds [  119 ] = CRGB (0,255,0);
leds [  120 ] = CRGB (0,255,0);
leds [  121 ] = CRGB (0,255,0);
leds [  122 ] = CRGB (0,255,0);
leds [  123 ] = CRGB (0,255,0);
leds [  124 ] = CRGB (0,255,0);
leds [  125 ] = CRGB (0,255,0);
leds [  126 ] = CRGB (0,255,0);
leds [  127 ] = CRGB (0,255,0);
leds [  128 ] = CRGB (0,255,0);
leds [  129 ] = CRGB (0,255,0);
leds [  130 ] = CRGB (0,255,0);
leds [  131 ] = CRGB (0,255,0);
leds [  132 ] = CRGB (0,255,0);
leds [  133 ] = CRGB (0,255,0);
leds [  134 ] = CRGB (0,255,0);
leds [  135 ] = CRGB (0,255,0);
leds [  136 ] = CRGB (0,255,0);
leds [  140 ] = CRGB (0,255,0);
leds [  141 ] = CRGB (0,255,0);
leds [  142 ] = CRGB (0,255,0);
leds [  143 ] = CRGB (0,255,0);
leds [  144 ] = CRGB (0,255,0);
leds [  145 ] = CRGB (0,255,0);
leds [  146 ] = CRGB (0,255,0);
leds [  147 ] = CRGB (0,255,0);
leds [  151 ] = CRGB (0,255,0);
leds [  152 ] = CRGB (0,255,0);
leds [  153 ] = CRGB (0,255,0);
leds [  154 ] = CRGB (0,255,0);
leds [  155 ] = CRGB (0,255,0);
leds [  156 ] = CRGB (0,255,0);
leds [  157 ] = CRGB (0,255,0);
leds [  158 ] = CRGB (0,255,0);
leds [  159 ] = CRGB (0,255,0);
leds [  160 ] = CRGB (0,255,0);
leds [  161 ] = CRGB (0,255,0);
leds [  162 ] = CRGB (0,255,0);
leds [  163 ] = CRGB (0,255,0);
leds [  164 ] = CRGB (0,255,0);
leds [  165 ] = CRGB (0,255,0);
leds [  166 ] = CRGB (0,255,0);
leds [  167 ] = CRGB (0,255,0);
leds [  168 ] = CRGB (0,255,0);
leds [  172 ] = CRGB (0,255,0);
leds [  173 ] = CRGB (0,255,0);
leds [  174 ] = CRGB (0,255,0);
leds [  175 ] = CRGB (0,255,0);
leds [  176 ] = CRGB (0,255,0);
leds [  177 ] = CRGB (0,255,0);
leds [  178 ] = CRGB (0,255,0);
leds [  179 ] = CRGB (0,255,0);
leds [  183 ] = CRGB (0,255,0);
leds [  184 ] = CRGB (0,255,0);
leds [  185 ] = CRGB (0,255,0);
leds [  186 ] = CRGB (0,255,0);
leds [  197 ] = CRGB (0,255,0);
leds [  198 ] = CRGB (0,255,0);
leds [  199 ] = CRGB (0,255,0);
leds [  200 ] = CRGB (0,255,0);
leds [  204 ] = CRGB (0,255,0);
leds [  205 ] = CRGB (0,255,0);
leds [  206 ] = CRGB (0,255,0);
leds [  207 ] = CRGB (0,255,0);
leds [  208 ] = CRGB (0,255,0);
leds [  209 ] = CRGB (0,255,0);
leds [  210 ] = CRGB (0,255,0);
leds [  211 ] = CRGB (0,255,0);
leds [  215 ] = CRGB (0,255,0);
leds [  216 ] = CRGB (0,255,0);
leds [  217 ] = CRGB (0,255,0);
leds [  218 ] = CRGB (0,255,0);
leds [  229 ] = CRGB (0,255,0);
leds [  230 ] = CRGB (0,255,0);
leds [  231 ] = CRGB (0,255,0);
leds [  232 ] = CRGB (0,255,0);
leds [  236 ] = CRGB (0,255,0);
leds [  237 ] = CRGB (0,255,0);
leds [  238 ] = CRGB (0,255,0);
leds [  239 ] = CRGB (0,255,0);
leds [  240 ] = CRGB (0,255,0);
leds [  241 ] = CRGB (0,255,0);
leds [  242 ] = CRGB (0,255,0);
leds [  243 ] = CRGB (0,255,0);
leds [  247 ] = CRGB (0,255,0);
leds [  248 ] = CRGB (0,255,0);
leds [  249 ] = CRGB (0,255,0);
leds [  250 ] = CRGB (0,255,0);
   FastLED.show();
   delay(1000);
   FastLED.clear();
  for (t=0;t<3;t=t+1){
   FastLED.clear();
leds [  119 ] = CRGB (0,255,0);
leds [  120 ] = CRGB (0,255,0);
leds [  121 ] = CRGB (0,255,0);
leds [  122 ] = CRGB (0,255,0);
leds [  123 ] = CRGB (0,255,0);
leds [  124 ] = CRGB (0,255,0);
leds [  125 ] = CRGB (0,255,0);
leds [  126 ] = CRGB (0,255,0);
leds [  127 ] = CRGB (0,255,0);
leds [  128 ] = CRGB (0,255,0);
leds [  129 ] = CRGB (0,255,0);
leds [  130 ] = CRGB (0,255,0);
leds [  131 ] = CRGB (0,255,0);
leds [  132 ] = CRGB (0,255,0);
leds [  133 ] = CRGB (0,255,0);
leds [  134 ] = CRGB (0,255,0);
leds [  135 ] = CRGB (0,255,0);
leds [  136 ] = CRGB (0,255,0);
leds [  151 ] = CRGB (0,255,0);
leds [  152 ] = CRGB (0,255,0);
leds [  153 ] = CRGB (0,255,0);
leds [  154 ] = CRGB (0,255,0);
leds [  155 ] = CRGB (0,255,0);
leds [  156 ] = CRGB (0,255,0);
leds [  157 ] = CRGB (0,255,0);
leds [  158 ] = CRGB (0,255,0);
leds [  159 ] = CRGB (0,255,0);
leds [  160 ] = CRGB (0,255,0);
leds [  161 ] = CRGB (0,255,0);
leds [  162 ] = CRGB (0,255,0);
leds [  163 ] = CRGB (0,255,0);
leds [  164 ] = CRGB (0,255,0);
leds [  165 ] = CRGB (0,255,0);
leds [  166 ] = CRGB (0,255,0);
leds [  167 ] = CRGB (0,255,0);
leds [  168 ] = CRGB (0,255,0);
leds [  183 ] = CRGB (0,255,0);
leds [  184 ] = CRGB (0,255,0);
leds [  185 ] = CRGB (0,255,0);
leds [  186 ] = CRGB (0,255,0);
leds [  197 ] = CRGB (0,255,0);
leds [  198 ] = CRGB (0,255,0);
leds [  199 ] = CRGB (0,255,0);
leds [  200 ] = CRGB (0,255,0);
leds [  215 ] = CRGB (0,255,0);
leds [  216 ] = CRGB (0,255,0);
leds [  217 ] = CRGB (0,255,0);
leds [  218 ] = CRGB (0,255,0);
leds [  229 ] = CRGB (0,255,0);
leds [  230 ] = CRGB (0,255,0);
leds [  231 ] = CRGB (0,255,0);
leds [  232 ] = CRGB (0,255,0);
leds [  247 ] = CRGB (0,255,0);
leds [  248 ] = CRGB (0,255,0);
leds [  249 ] = CRGB (0,255,0);
leds [  250 ] = CRGB (0,255,0);
   FastLED.show();
   delay(300);
   FastLED.clear();
leds [  0 ] = CRGB (0,255,0);
leds [  1 ] = CRGB (0,255,0);
leds [  2 ] = CRGB (0,255,0);
leds [  3 ] = CRGB (0,255,0);
leds [  4 ] = CRGB (0,255,0);
leds [  5 ] = CRGB (0,255,0);
leds [  6 ] = CRGB (0,255,0);
leds [  7 ] = CRGB (0,255,0);
leds [  8 ] = CRGB (0,255,0);
leds [  9 ] = CRGB (0,255,0);
leds [  10  ] = CRGB (0,255,0);
leds [  11  ] = CRGB (0,255,0);
leds [  12  ] = CRGB (0,255,0);
leds [  13  ] = CRGB (0,255,0);
leds [  14  ] = CRGB (0,255,0);
leds [  15  ] = CRGB (0,255,0);
leds [  16  ] = CRGB (0,255,0);
leds [  17  ] = CRGB (0,255,0);
leds [  18  ] = CRGB (0,255,0);
leds [  19  ] = CRGB (0,255,0);
leds [  20  ] = CRGB (0,255,0);
leds [  21  ] = CRGB (0,255,0);
leds [  22  ] = CRGB (0,255,0);
leds [  23  ] = CRGB (0,255,0);
leds [  24  ] = CRGB (0,255,0);
leds [  25  ] = CRGB (0,255,0);
leds [  26  ] = CRGB (0,255,0);
leds [  27  ] = CRGB (0,255,0);
leds [  28  ] = CRGB (0,255,0);
leds [  29  ] = CRGB (0,255,0);
leds [  30  ] = CRGB (0,255,0);
leds [  31  ] = CRGB (0,255,0);
leds [  32  ] = CRGB (0,255,0);
leds [  33  ] = CRGB (0,255,0);
leds [  34  ] = CRGB (0,255,0);
leds [  35  ] = CRGB (0,255,0);
leds [  36  ] = CRGB (0,255,0);
leds [  37  ] = CRGB (0,255,0);
leds [  38  ] = CRGB (0,255,0);
leds [  39  ] = CRGB (0,255,0);
leds [  40  ] = CRGB (0,255,0);
leds [  41  ] = CRGB (0,255,0);
leds [  42  ] = CRGB (0,255,0);
leds [  43  ] = CRGB (0,255,0);
leds [  44  ] = CRGB (0,255,0);
leds [  45  ] = CRGB (0,255,0);
leds [  46  ] = CRGB (0,255,0);
leds [  47  ] = CRGB (0,255,0);
leds [  48  ] = CRGB (0,255,0);
leds [  49  ] = CRGB (0,255,0);
leds [  50  ] = CRGB (0,255,0);
leds [  51  ] = CRGB (0,255,0);
leds [  52  ] = CRGB (0,255,0);
leds [  53  ] = CRGB (0,255,0);
leds [  54  ] = CRGB (0,255,0);
leds [  55  ] = CRGB (0,255,0);
leds [  56  ] = CRGB (0,255,0);
leds [  57  ] = CRGB (0,255,0);
leds [  58  ] = CRGB (0,255,0);
leds [  59  ] = CRGB (0,255,0);
leds [  60  ] = CRGB (0,255,0);
leds [  61  ] = CRGB (0,255,0);
leds [  62  ] = CRGB (0,255,0);
leds [  63  ] = CRGB (0,255,0);
leds [  76  ] = CRGB (0,255,0);
leds [  77  ] = CRGB (0,255,0);
leds [  78  ] = CRGB (0,255,0);
leds [  79  ] = CRGB (0,255,0);
leds [  80  ] = CRGB (0,255,0);
leds [  81  ] = CRGB (0,255,0);
leds [  82  ] = CRGB (0,255,0);
leds [  83  ] = CRGB (0,255,0);
leds [  108 ] = CRGB (0,255,0);
leds [  109 ] = CRGB (0,255,0);
leds [  110 ] = CRGB (0,255,0);
leds [  111 ] = CRGB (0,255,0);
leds [  112 ] = CRGB (0,255,0);
leds [  113 ] = CRGB (0,255,0);
leds [  114 ] = CRGB (0,255,0);
leds [  115 ] = CRGB (0,255,0);
leds [  140 ] = CRGB (0,255,0);
leds [  141 ] = CRGB (0,255,0);
leds [  142 ] = CRGB (0,255,0);
leds [  143 ] = CRGB (0,255,0);
leds [  144 ] = CRGB (0,255,0);
leds [  145 ] = CRGB (0,255,0);
leds [  146 ] = CRGB (0,255,0);
leds [  147 ] = CRGB (0,255,0);
leds [  172 ] = CRGB (0,255,0);
leds [  173 ] = CRGB (0,255,0);
leds [  174 ] = CRGB (0,255,0);
leds [  175 ] = CRGB (0,255,0);
leds [  176 ] = CRGB (0,255,0);
leds [  177 ] = CRGB (0,255,0);
leds [  178 ] = CRGB (0,255,0);
leds [  179 ] = CRGB (0,255,0);
leds [  204 ] = CRGB (0,255,0);
leds [  205 ] = CRGB (0,255,0);
leds [  206 ] = CRGB (0,255,0);
leds [  207 ] = CRGB (0,255,0);
leds [  208 ] = CRGB (0,255,0);
leds [  209 ] = CRGB (0,255,0);
leds [  210 ] = CRGB (0,255,0);
leds [  211 ] = CRGB (0,255,0);
leds [  236 ] = CRGB (0,255,0);
leds [  237 ] = CRGB (0,255,0);
leds [  238 ] = CRGB (0,255,0);
leds [  239 ] = CRGB (0,255,0);
leds [  240 ] = CRGB (0,255,0);
leds [  241 ] = CRGB (0,255,0);
leds [  242 ] = CRGB (0,255,0);
leds [  243 ] = CRGB (0,255,0);
   FastLED.show();
   delay(300);
   FastLED.clear();
   }
   t=0;
  Serial.write('A');
  } 
}


void RightArrowBlink()  {// Function that is called when Vx is >= 1000 and shows a Right Blinking Arrow on the matrix

  while (state == 'R') {
  FastLED.clear();
leds [  12  ] = CRGB (0,255,0);
leds [  18  ] = CRGB (0,255,0);
leds [  19  ] = CRGB (0,255,0);
leds [  20  ] = CRGB (0,255,0);
leds [  42  ] = CRGB (0,255,0);
leds [  43  ] = CRGB (0,255,0);
leds [  44  ] = CRGB (0,255,0);
leds [  45  ] = CRGB (0,255,0);
leds [  46  ] = CRGB (0,255,0);
leds [  48  ] = CRGB (0,255,0);
leds [  49  ] = CRGB (0,255,0);
leds [  50  ] = CRGB (0,255,0);
leds [  51  ] = CRGB (0,255,0);
leds [  52  ] = CRGB (0,255,0);
leds [  53  ] = CRGB (0,255,0);
leds [  54  ] = CRGB (0,255,0);
leds [  72  ] = CRGB (0,255,0);
leds [  73  ] = CRGB (0,255,0);
leds [  74  ] = CRGB (0,255,0);
leds [  75  ] = CRGB (0,255,0);
leds [  76  ] = CRGB (0,255,0);
leds [  77  ] = CRGB (0,255,0);
leds [  78  ] = CRGB (0,255,0);
leds [  82  ] = CRGB (0,255,0);
leds [  83  ] = CRGB (0,255,0);
leds [  84  ] = CRGB (0,255,0);
leds [  85  ] = CRGB (0,255,0);
leds [  86  ] = CRGB (0,255,0);
leds [  87  ] = CRGB (0,255,0);
leds [  88  ] = CRGB (0,255,0);
leds [  96  ] = CRGB (0,255,0);
leds [  102 ] = CRGB (0,255,0);
leds [  103 ] = CRGB (0,255,0);
leds [  104 ] = CRGB (0,255,0);
leds [  105 ] = CRGB (0,255,0);
leds [  106 ] = CRGB (0,255,0);
leds [  107 ] = CRGB (0,255,0);
leds [  108 ] = CRGB (0,255,0);
leds [  116 ] = CRGB (0,255,0);
leds [  117 ] = CRGB (0,255,0);
leds [  118 ] = CRGB (0,255,0);
leds [  119 ] = CRGB (0,255,0);
leds [  120 ] = CRGB (0,255,0);
leds [  121 ] = CRGB (0,255,0);
leds [  122 ] = CRGB (0,255,0);
leds [  126 ] = CRGB (0,255,0);
leds [  127 ] = CRGB (0,255,0);
leds [  128 ] = CRGB (0,255,0);
leds [  129 ] = CRGB (0,255,0);
leds [  130 ] = CRGB (0,255,0);
leds [  132 ] = CRGB (0,255,0);
leds [  133 ] = CRGB (0,255,0);
leds [  134 ] = CRGB (0,255,0);
leds [  135 ] = CRGB (0,255,0);
leds [  136 ] = CRGB (0,255,0);
leds [  137 ] = CRGB (0,255,0);
leds [  138 ] = CRGB (0,255,0);
leds [  150 ] = CRGB (0,255,0);
leds [  151 ] = CRGB (0,255,0);
leds [  152 ] = CRGB (0,255,0);
leds [  153 ] = CRGB (0,255,0);
leds [  154 ] = CRGB (0,255,0);
leds [  155 ] = CRGB (0,255,0);
leds [  156 ] = CRGB (0,255,0);
leds [  157 ] = CRGB (0,255,0);
leds [  158 ] = CRGB (0,255,0);
leds [  159 ] = CRGB (0,255,0);
leds [  160 ] = CRGB (0,255,0);
leds [  161 ] = CRGB (0,255,0);
leds [  162 ] = CRGB (0,255,0);
leds [  163 ] = CRGB (0,255,0);
leds [  164 ] = CRGB (0,255,0);
leds [  165 ] = CRGB (0,255,0);
leds [  166 ] = CRGB (0,255,0);
leds [  167 ] = CRGB (0,255,0);
leds [  168 ] = CRGB (0,255,0);
leds [  184 ] = CRGB (0,255,0);
leds [  185 ] = CRGB (0,255,0);
leds [  186 ] = CRGB (0,255,0);
leds [  187 ] = CRGB (0,255,0);
leds [  188 ] = CRGB (0,255,0);
leds [  189 ] = CRGB (0,255,0);
leds [  190 ] = CRGB (0,255,0);
leds [  191 ] = CRGB (0,255,0);
leds [  192 ] = CRGB (0,255,0);
leds [  193 ] = CRGB (0,255,0);
leds [  194 ] = CRGB (0,255,0);
leds [  195 ] = CRGB (0,255,0);
leds [  196 ] = CRGB (0,255,0);
leds [  197 ] = CRGB (0,255,0);
leds [  198 ] = CRGB (0,255,0);
leds [  216 ] = CRGB (0,255,0);
leds [  217 ] = CRGB (0,255,0);
leds [  218 ] = CRGB (0,255,0);
leds [  219 ] = CRGB (0,255,0);
leds [  220 ] = CRGB (0,255,0);
leds [  221 ] = CRGB (0,255,0);
leds [  222 ] = CRGB (0,255,0);
leds [  223 ] = CRGB (0,255,0);
leds [  224 ] = CRGB (0,255,0);
leds [  225 ] = CRGB (0,255,0);
leds [  226 ] = CRGB (0,255,0);
leds [  227 ] = CRGB (0,255,0);
leds [  228 ] = CRGB (0,255,0);
leds [  229 ] = CRGB (0,255,0);
leds [  230 ] = CRGB (0,255,0);
leds [  231 ] = CRGB (0,255,0);
leds [  232 ] = CRGB (0,255,0);
leds [  246 ] = CRGB (0,255,0);
leds [  247 ] = CRGB (0,255,0);
leds [  248 ] = CRGB (0,255,0);
leds [  249 ] = CRGB (0,255,0);
leds [  250 ] = CRGB (0,255,0);
leds [  251 ] = CRGB (0,255,0);
leds [  252 ] = CRGB (0,255,0);
leds [  253 ] = CRGB (0,255,0);
leds [  254 ] = CRGB (0,255,0);
leds [  255 ] = CRGB (0,255,0);
   FastLED.show();
   delay(1000);
   FastLED.clear();
leds [  0 ] = CRGB (0,255,0);
leds [  1 ] = CRGB (0,255,0);
leds [  2 ] = CRGB (0,255,0);
leds [  3 ] = CRGB (0,255,0);
leds [  7 ] = CRGB (0,255,0);
leds [  8 ] = CRGB (0,255,0);
leds [  9 ] = CRGB (0,255,0);
leds [  10  ] = CRGB (0,255,0);
leds [  21  ] = CRGB (0,255,0);
leds [  22  ] = CRGB (0,255,0);
leds [  23  ] = CRGB (0,255,0);
leds [  24  ] = CRGB (0,255,0);
leds [  28  ] = CRGB (0,255,0);
leds [  29  ] = CRGB (0,255,0);
leds [  30  ] = CRGB (0,255,0);
leds [  31  ] = CRGB (0,255,0);
leds [  32  ] = CRGB (0,255,0);
leds [  33  ] = CRGB (0,255,0);
leds [  34  ] = CRGB (0,255,0);
leds [  35  ] = CRGB (0,255,0);
leds [  39  ] = CRGB (0,255,0);
leds [  40  ] = CRGB (0,255,0);
leds [  41  ] = CRGB (0,255,0);
leds [  42  ] = CRGB (0,255,0);
leds [  53  ] = CRGB (0,255,0);
leds [  54  ] = CRGB (0,255,0);
leds [  55  ] = CRGB (0,255,0);
leds [  56  ] = CRGB (0,255,0);
leds [  60  ] = CRGB (0,255,0);
leds [  61  ] = CRGB (0,255,0);
leds [  62  ] = CRGB (0,255,0);
leds [  63  ] = CRGB (0,255,0);
leds [  64  ] = CRGB (0,255,0);
leds [  65  ] = CRGB (0,255,0);
leds [  66  ] = CRGB (0,255,0);
leds [  67  ] = CRGB (0,255,0);
leds [  71  ] = CRGB (0,255,0);
leds [  72  ] = CRGB (0,255,0);
leds [  73  ] = CRGB (0,255,0);
leds [  74  ] = CRGB (0,255,0);
leds [  80  ] = CRGB (0,255,0);
leds [  81  ] = CRGB (0,255,0);
leds [  82  ] = CRGB (0,255,0);
leds [  83  ] = CRGB (0,255,0);
leds [  84  ] = CRGB (0,255,0);
leds [  85  ] = CRGB (0,255,0);
leds [  86  ] = CRGB (0,255,0);
leds [  87  ] = CRGB (0,255,0);
leds [  88  ] = CRGB (0,255,0);
leds [  92  ] = CRGB (0,255,0);
leds [  93  ] = CRGB (0,255,0);
leds [  94  ] = CRGB (0,255,0);
leds [  95  ] = CRGB (0,255,0);
leds [  96  ] = CRGB (0,255,0);
leds [  97  ] = CRGB (0,255,0);
leds [  98  ] = CRGB (0,255,0);
leds [  99  ] = CRGB (0,255,0);
leds [  103 ] = CRGB (0,255,0);
leds [  104 ] = CRGB (0,255,0);
leds [  105 ] = CRGB (0,255,0);
leds [  106 ] = CRGB (0,255,0);
leds [  107 ] = CRGB (0,255,0);
leds [  108 ] = CRGB (0,255,0);
leds [  109 ] = CRGB (0,255,0);
leds [  110 ] = CRGB (0,255,0);
leds [  111 ] = CRGB (0,255,0);
leds [  112 ] = CRGB (0,255,0);
leds [  113 ] = CRGB (0,255,0);
leds [  114 ] = CRGB (0,255,0);
leds [  115 ] = CRGB (0,255,0);
leds [  116 ] = CRGB (0,255,0);
leds [  117 ] = CRGB (0,255,0);
leds [  118 ] = CRGB (0,255,0);
leds [  119 ] = CRGB (0,255,0);
leds [  120 ] = CRGB (0,255,0);
leds [  124 ] = CRGB (0,255,0);
leds [  125 ] = CRGB (0,255,0);
leds [  126 ] = CRGB (0,255,0);
leds [  127 ] = CRGB (0,255,0);
leds [  128 ] = CRGB (0,255,0);
leds [  129 ] = CRGB (0,255,0);
leds [  130 ] = CRGB (0,255,0);
leds [  131 ] = CRGB (0,255,0);
leds [  135 ] = CRGB (0,255,0);
leds [  136 ] = CRGB (0,255,0);
leds [  137 ] = CRGB (0,255,0);
leds [  138 ] = CRGB (0,255,0);
leds [  139 ] = CRGB (0,255,0);
leds [  140 ] = CRGB (0,255,0);
leds [  141 ] = CRGB (0,255,0);
leds [  142 ] = CRGB (0,255,0);
leds [  143 ] = CRGB (0,255,0);
leds [  156 ] = CRGB (0,255,0);
leds [  157 ] = CRGB (0,255,0);
leds [  158 ] = CRGB (0,255,0);
leds [  159 ] = CRGB (0,255,0);
leds [  160 ] = CRGB (0,255,0);
leds [  161 ] = CRGB (0,255,0);
leds [  162 ] = CRGB (0,255,0);
leds [  163 ] = CRGB (0,255,0);
leds [  188 ] = CRGB (0,255,0);
leds [  189 ] = CRGB (0,255,0);
leds [  190 ] = CRGB (0,255,0);
leds [  191 ] = CRGB (0,255,0);
leds [  192 ] = CRGB (0,255,0);
leds [  193 ] = CRGB (0,255,0);
leds [  194 ] = CRGB (0,255,0);
leds [  195 ] = CRGB (0,255,0);
leds [  196 ] = CRGB (0,255,0);
leds [  197 ] = CRGB (0,255,0);
leds [  198 ] = CRGB (0,255,0);
leds [  199 ] = CRGB (0,255,0);
leds [  200 ] = CRGB (0,255,0);
leds [  201 ] = CRGB (0,255,0);
leds [  202 ] = CRGB (0,255,0);
leds [  203 ] = CRGB (0,255,0);
leds [  204 ] = CRGB (0,255,0);
leds [  205 ] = CRGB (0,255,0);
leds [  206 ] = CRGB (0,255,0);
leds [  207 ] = CRGB (0,255,0);
leds [  208 ] = CRGB (0,255,0);
leds [  209 ] = CRGB (0,255,0);
leds [  210 ] = CRGB (0,255,0);
leds [  211 ] = CRGB (0,255,0);
leds [  212 ] = CRGB (0,255,0);
leds [  213 ] = CRGB (0,255,0);
leds [  214 ] = CRGB (0,255,0);
leds [  215 ] = CRGB (0,255,0);
leds [  216 ] = CRGB (0,255,0);
leds [  217 ] = CRGB (0,255,0);
leds [  218 ] = CRGB (0,255,0);
leds [  219 ] = CRGB (0,255,0);
leds [  220 ] = CRGB (0,255,0);
leds [  221 ] = CRGB (0,255,0);
leds [  222 ] = CRGB (0,255,0);
leds [  223 ] = CRGB (0,255,0);
leds [  224 ] = CRGB (0,255,0);
leds [  225 ] = CRGB (0,255,0);
leds [  226 ] = CRGB (0,255,0);
leds [  227 ] = CRGB (0,255,0);
leds [  228 ] = CRGB (0,255,0);
leds [  229 ] = CRGB (0,255,0);
leds [  230 ] = CRGB (0,255,0);
leds [  231 ] = CRGB (0,255,0);
leds [  232 ] = CRGB (0,255,0);
leds [  233 ] = CRGB (0,255,0);
leds [  234 ] = CRGB (0,255,0);
leds [  235 ] = CRGB (0,255,0);
leds [  236 ] = CRGB (0,255,0);
leds [  237 ] = CRGB (0,255,0);
leds [  238 ] = CRGB (0,255,0);
leds [  239 ] = CRGB (0,255,0);
leds [  240 ] = CRGB (0,255,0);
leds [  241 ] = CRGB (0,255,0);
leds [  242 ] = CRGB (0,255,0);
leds [  243 ] = CRGB (0,255,0);
leds [  244 ] = CRGB (0,255,0);
leds [  245 ] = CRGB (0,255,0);
leds [  246 ] = CRGB (0,255,0);
leds [  247 ] = CRGB (0,255,0);
leds [  248 ] = CRGB (0,255,0);
leds [  249 ] = CRGB (0,255,0);
leds [  250 ] = CRGB (0,255,0);
leds [  251 ] = CRGB (0,255,0);
leds [  252 ] = CRGB (0,255,0);
leds [  253 ] = CRGB (0,255,0);
leds [  254 ] = CRGB (0,255,0);
leds [  255 ] = CRGB (0,255,0);
   FastLED.show();
   delay(1000);
   FastLED.clear();
  for (t=0;t<3;t=t+1){
   FastLED.clear();
leds [  0 ] = CRGB (0,255,0);
leds [  1 ] = CRGB (0,255,0);
leds [  2 ] = CRGB (0,255,0);
leds [  3 ] = CRGB (0,255,0);
leds [  28  ] = CRGB (0,255,0);
leds [  29  ] = CRGB (0,255,0);
leds [  30  ] = CRGB (0,255,0);
leds [  31  ] = CRGB (0,255,0);
leds [  32  ] = CRGB (0,255,0);
leds [  33  ] = CRGB (0,255,0);
leds [  34  ] = CRGB (0,255,0);
leds [  35  ] = CRGB (0,255,0);
leds [  60  ] = CRGB (0,255,0);
leds [  61  ] = CRGB (0,255,0);
leds [  62  ] = CRGB (0,255,0);
leds [  63  ] = CRGB (0,255,0);
leds [  64  ] = CRGB (0,255,0);
leds [  65  ] = CRGB (0,255,0);
leds [  66  ] = CRGB (0,255,0);
leds [  67  ] = CRGB (0,255,0);
leds [  92  ] = CRGB (0,255,0);
leds [  93  ] = CRGB (0,255,0);
leds [  94  ] = CRGB (0,255,0);
leds [  95  ] = CRGB (0,255,0);
leds [  96  ] = CRGB (0,255,0);
leds [  97  ] = CRGB (0,255,0);
leds [  98  ] = CRGB (0,255,0);
leds [  99  ] = CRGB (0,255,0);
leds [  124 ] = CRGB (0,255,0);
leds [  125 ] = CRGB (0,255,0);
leds [  126 ] = CRGB (0,255,0);
leds [  127 ] = CRGB (0,255,0);
leds [  128 ] = CRGB (0,255,0);
leds [  129 ] = CRGB (0,255,0);
leds [  130 ] = CRGB (0,255,0);
leds [  131 ] = CRGB (0,255,0);
leds [  156 ] = CRGB (0,255,0);
leds [  157 ] = CRGB (0,255,0);
leds [  158 ] = CRGB (0,255,0);
leds [  159 ] = CRGB (0,255,0);
leds [  160 ] = CRGB (0,255,0);
leds [  161 ] = CRGB (0,255,0);
leds [  162 ] = CRGB (0,255,0);
leds [  163 ] = CRGB (0,255,0);
leds [  188 ] = CRGB (0,255,0);
leds [  189 ] = CRGB (0,255,0);
leds [  190 ] = CRGB (0,255,0);
leds [  191 ] = CRGB (0,255,0);
leds [  192 ] = CRGB (0,255,0);
leds [  193 ] = CRGB (0,255,0);
leds [  194 ] = CRGB (0,255,0);
leds [  195 ] = CRGB (0,255,0);
leds [  196 ] = CRGB (0,255,0);
leds [  197 ] = CRGB (0,255,0);
leds [  198 ] = CRGB (0,255,0);
leds [  199 ] = CRGB (0,255,0);
leds [  200 ] = CRGB (0,255,0);
leds [  201 ] = CRGB (0,255,0);
leds [  202 ] = CRGB (0,255,0);
leds [  203 ] = CRGB (0,255,0);
leds [  204 ] = CRGB (0,255,0);
leds [  205 ] = CRGB (0,255,0);
leds [  206 ] = CRGB (0,255,0);
leds [  207 ] = CRGB (0,255,0);
leds [  208 ] = CRGB (0,255,0);
leds [  209 ] = CRGB (0,255,0);
leds [  210 ] = CRGB (0,255,0);
leds [  211 ] = CRGB (0,255,0);
leds [  212 ] = CRGB (0,255,0);
leds [  213 ] = CRGB (0,255,0);
leds [  214 ] = CRGB (0,255,0);
leds [  215 ] = CRGB (0,255,0);
leds [  216 ] = CRGB (0,255,0);
leds [  217 ] = CRGB (0,255,0);
leds [  218 ] = CRGB (0,255,0);
leds [  219 ] = CRGB (0,255,0);
leds [  220 ] = CRGB (0,255,0);
leds [  221 ] = CRGB (0,255,0);
leds [  222 ] = CRGB (0,255,0);
leds [  223 ] = CRGB (0,255,0);
leds [  224 ] = CRGB (0,255,0);
leds [  225 ] = CRGB (0,255,0);
leds [  226 ] = CRGB (0,255,0);
leds [  227 ] = CRGB (0,255,0);
leds [  228 ] = CRGB (0,255,0);
leds [  229 ] = CRGB (0,255,0);
leds [  230 ] = CRGB (0,255,0);
leds [  231 ] = CRGB (0,255,0);
leds [  232 ] = CRGB (0,255,0);
leds [  233 ] = CRGB (0,255,0);
leds [  234 ] = CRGB (0,255,0);
leds [  235 ] = CRGB (0,255,0);
leds [  236 ] = CRGB (0,255,0);
leds [  237 ] = CRGB (0,255,0);
leds [  238 ] = CRGB (0,255,0);
leds [  239 ] = CRGB (0,255,0);
leds [  240 ] = CRGB (0,255,0);
leds [  241 ] = CRGB (0,255,0);
leds [  242 ] = CRGB (0,255,0);
leds [  243 ] = CRGB (0,255,0);
leds [  244 ] = CRGB (0,255,0);
leds [  245 ] = CRGB (0,255,0);
leds [  246 ] = CRGB (0,255,0);
leds [  247 ] = CRGB (0,255,0);
leds [  248 ] = CRGB (0,255,0);
leds [  249 ] = CRGB (0,255,0);
leds [  250 ] = CRGB (0,255,0);
leds [  251 ] = CRGB (0,255,0);
leds [  252 ] = CRGB (0,255,0);
leds [  253 ] = CRGB (0,255,0);
leds [  254 ] = CRGB (0,255,0);
leds [  255 ] = CRGB (0,255,0);
   FastLED.show();
   delay(300);
   FastLED.clear();
leds [  0 ] = CRGB (0,255,0);
leds [  1 ] = CRGB (0,255,0);
leds [  2 ] = CRGB (0,255,0);
leds [  3 ] = CRGB (0,255,0);
leds [  28  ] = CRGB (0,255,0);
leds [  29  ] = CRGB (0,255,0);
leds [  30  ] = CRGB (0,255,0);
leds [  31  ] = CRGB (0,255,0);
leds [  32  ] = CRGB (0,255,0);
leds [  33  ] = CRGB (0,255,0);
leds [  34  ] = CRGB (0,255,0);
leds [  35  ] = CRGB (0,255,0);
leds [  60  ] = CRGB (0,255,0);
leds [  61  ] = CRGB (0,255,0);
leds [  62  ] = CRGB (0,255,0);
leds [  63  ] = CRGB (0,255,0);
leds [  64  ] = CRGB (0,255,0);
leds [  65  ] = CRGB (0,255,0);
leds [  66  ] = CRGB (0,255,0);
leds [  67  ] = CRGB (0,255,0);
leds [  92  ] = CRGB (0,255,0);
leds [  93  ] = CRGB (0,255,0);
leds [  94  ] = CRGB (0,255,0);
leds [  95  ] = CRGB (0,255,0);
leds [  96  ] = CRGB (0,255,0);
leds [  97  ] = CRGB (0,255,0);
leds [  98  ] = CRGB (0,255,0);
leds [  99  ] = CRGB (0,255,0);
leds [  124 ] = CRGB (0,255,0);
leds [  125 ] = CRGB (0,255,0);
leds [  126 ] = CRGB (0,255,0);
leds [  127 ] = CRGB (0,255,0);
leds [  128 ] = CRGB (0,255,0);
leds [  129 ] = CRGB (0,255,0);
leds [  130 ] = CRGB (0,255,0);
leds [  131 ] = CRGB (0,255,0);
leds [  156 ] = CRGB (0,255,0);
leds [  157 ] = CRGB (0,255,0);
leds [  158 ] = CRGB (0,255,0);
leds [  159 ] = CRGB (0,255,0);
leds [  160 ] = CRGB (0,255,0);
leds [  161 ] = CRGB (0,255,0);
leds [  162 ] = CRGB (0,255,0);
leds [  163 ] = CRGB (0,255,0);
leds [  188 ] = CRGB (0,255,0);
leds [  189 ] = CRGB (0,255,0);
leds [  190 ] = CRGB (0,255,0);
leds [  191 ] = CRGB (0,255,0);
leds [  192 ] = CRGB (0,255,0);
leds [  193 ] = CRGB (0,255,0);
leds [  194 ] = CRGB (0,255,0);
leds [  195 ] = CRGB (0,255,0);
leds [  196 ] = CRGB (0,255,0);
leds [  197 ] = CRGB (0,255,0);
leds [  198 ] = CRGB (0,255,0);
leds [  199 ] = CRGB (0,255,0);
leds [  200 ] = CRGB (0,255,0);
leds [  201 ] = CRGB (0,255,0);
leds [  202 ] = CRGB (0,255,0);
leds [  203 ] = CRGB (0,255,0);
leds [  204 ] = CRGB (0,255,0);
leds [  205 ] = CRGB (0,255,0);
leds [  206 ] = CRGB (0,255,0);
leds [  207 ] = CRGB (0,255,0);
leds [  208 ] = CRGB (0,255,0);
leds [  209 ] = CRGB (0,255,0);
leds [  210 ] = CRGB (0,255,0);
leds [  211 ] = CRGB (0,255,0);
leds [  212 ] = CRGB (0,255,0);
leds [  213 ] = CRGB (0,255,0);
leds [  214 ] = CRGB (0,255,0);
leds [  215 ] = CRGB (0,255,0);
leds [  216 ] = CRGB (0,255,0);
leds [  217 ] = CRGB (0,255,0);
leds [  218 ] = CRGB (0,255,0);
leds [  219 ] = CRGB (0,255,0);
leds [  220 ] = CRGB (0,255,0);
leds [  221 ] = CRGB (0,255,0);
leds [  222 ] = CRGB (0,255,0);
leds [  223 ] = CRGB (0,255,0);
leds [  224 ] = CRGB (0,255,0);
leds [  225 ] = CRGB (0,255,0);
leds [  226 ] = CRGB (0,255,0);
leds [  227 ] = CRGB (0,255,0);
leds [  228 ] = CRGB (0,255,0);
leds [  229 ] = CRGB (0,255,0);
leds [  230 ] = CRGB (0,255,0);
leds [  231 ] = CRGB (0,255,0);
leds [  232 ] = CRGB (0,255,0);
leds [  233 ] = CRGB (0,255,0);
leds [  234 ] = CRGB (0,255,0);
leds [  235 ] = CRGB (0,255,0);
leds [  236 ] = CRGB (0,255,0);
leds [  237 ] = CRGB (0,255,0);
leds [  238 ] = CRGB (0,255,0);
leds [  239 ] = CRGB (0,255,0);
leds [  240 ] = CRGB (0,255,0);
leds [  241 ] = CRGB (0,255,0);
leds [  242 ] = CRGB (0,255,0);
leds [  243 ] = CRGB (0,255,0);
leds [  244 ] = CRGB (0,255,0);
leds [  245 ] = CRGB (0,255,0);
leds [  246 ] = CRGB (0,255,0);
leds [  247 ] = CRGB (0,255,0);
leds [  248 ] = CRGB (0,255,0);
leds [  249 ] = CRGB (0,255,0);
leds [  250 ] = CRGB (0,255,0);
leds [  251 ] = CRGB (0,255,0);
leds [  252 ] = CRGB (0,255,0);
leds [  253 ] = CRGB (0,255,0);
leds [  254 ] = CRGB (0,255,0);
leds [  255 ] = CRGB (0,255,0);
   FastLED.show();
   delay(300);
   FastLED.clear();
   }
   t=0;
  Serial.write('D');
  }
}


void ExclamationMarkBlink()  { 
  
  while (state == 'U') {

  for (t=0;t<3;t=t+1){
  FastLED.clear();
leds [  1 ] = CRGB (255,0,0);
leds [  2 ] = CRGB (255,0,0);
leds [  3 ] = CRGB (255,0,0);
leds [  3 ] = CRGB (255,0,0);
leds [  4 ] = CRGB (255,0,0);
leds [  26  ] = CRGB (255,0,0);
leds [  27  ] = CRGB (255,0,0);
leds [  28  ] = CRGB (255,0,0);
leds [  28  ] = CRGB (255,0,0);
leds [  29  ] = CRGB (255,0,0);
leds [  30  ] = CRGB (255,0,0);
leds [  31  ] = CRGB (255,0,0);
leds [  32  ] = CRGB (255,0,0);
leds [  33  ] = CRGB (255,0,0);
leds [  34  ] = CRGB (255,0,0);
leds [  35  ] = CRGB (255,0,0);
leds [  35  ] = CRGB (255,0,0);
leds [  36  ] = CRGB (255,0,0);
leds [  37  ] = CRGB (255,0,0);
leds [  57  ] = CRGB (255,0,0);
leds [  58  ] = CRGB (255,0,0);
leds [  59  ] = CRGB (255,0,0);
leds [  60  ] = CRGB (255,0,0);
leds [  60  ] = CRGB (255,0,0);
leds [  61  ] = CRGB (255,0,0);
leds [  62  ] = CRGB (255,0,0);
leds [  63  ] = CRGB (255,0,0);
leds [  64  ] = CRGB (255,0,0);
leds [  65  ] = CRGB (255,0,0);
leds [  66  ] = CRGB (255,0,0);
leds [  67  ] = CRGB (255,0,0);
leds [  67  ] = CRGB (255,0,0);
leds [  68  ] = CRGB (255,0,0);
leds [  69  ] = CRGB (255,0,0);
leds [  70  ] = CRGB (255,0,0);
leds [  71  ] = CRGB (255,0,0);
leds [  87  ] = CRGB (255,0,0);
leds [  88  ] = CRGB (255,0,0);
leds [  89  ] = CRGB (255,0,0);
leds [  90  ] = CRGB (255,0,0);
leds [  91  ] = CRGB (255,0,0);
leds [  92  ] = CRGB (255,0,0);
leds [  92  ] = CRGB (255,0,0);
leds [  93  ] = CRGB (255,0,0);
leds [  94  ] = CRGB (255,0,0);
leds [  99  ] = CRGB (255,0,0);
leds [  99  ] = CRGB (255,0,0);
leds [  100 ] = CRGB (255,0,0);
leds [  101 ] = CRGB (255,0,0);
leds [  102 ] = CRGB (255,0,0);
leds [  103 ] = CRGB (255,0,0);
leds [  104 ] = CRGB (255,0,0);
leds [  118 ] = CRGB (255,0,0);
leds [  119 ] = CRGB (255,0,0);
leds [  120 ] = CRGB (255,0,0);
leds [  121 ] = CRGB (255,0,0);
leds [  122 ] = CRGB (255,0,0);
leds [  123 ] = CRGB (255,0,0);
leds [  133 ] = CRGB (255,0,0);
leds [  134 ] = CRGB (255,0,0);
leds [  135 ] = CRGB (255,0,0);
leds [  136 ] = CRGB (255,0,0);
leds [  137 ] = CRGB (255,0,0);
leds [  138 ] = CRGB (255,0,0);
leds [  149 ] = CRGB (255,0,0);
leds [  150 ] = CRGB (255,0,0);
leds [  151 ] = CRGB (255,0,0);
leds [  152 ] = CRGB (255,0,0);
leds [  168 ] = CRGB (255,0,0);
leds [  169 ] = CRGB (255,0,0);
leds [  170 ] = CRGB (255,0,0);
leds [  171 ] = CRGB (255,0,0);
leds [  181 ] = CRGB (255,0,0);
leds [  205 ] = CRGB (255,0,0);
leds [  206 ] = CRGB (255,0,0);
leds [  208 ] = CRGB (255,0,0);
leds [  209 ] = CRGB (255,0,0);
leds [  210 ] = CRGB (255,0,0);
leds [  211 ] = CRGB (255,0,0);
leds [  236 ] = CRGB (255,0,0);
leds [  237 ] = CRGB (255,0,0);
leds [  238 ] = CRGB (255,0,0);
leds [  239 ] = CRGB (255,0,0);
leds [  241 ] = CRGB (255,0,0);
leds [  242 ] = CRGB (255,0,0);
   FastLED.show();
   delay(300);
   FastLED.clear();
   }
  t=0;
  for (t=0;t<3;t=t+1){
   FastLED.clear();
leds [  5 ] = CRGB (255,0,0);
leds [  6 ] = CRGB (255,0,0);
leds [  7 ] = CRGB (255,0,0);
leds [  8 ] = CRGB (255,0,0);
leds [  23  ] = CRGB (255,0,0);
leds [  24  ] = CRGB (255,0,0);
leds [  25  ] = CRGB (255,0,0);
leds [  26  ] = CRGB (255,0,0);
leds [  37  ] = CRGB (255,0,0);
leds [  38  ] = CRGB (255,0,0);
leds [  39  ] = CRGB (255,0,0);
leds [  40  ] = CRGB (255,0,0);
leds [  55  ] = CRGB (255,0,0);
leds [  56  ] = CRGB (255,0,0);
leds [  57  ] = CRGB (255,0,0);
leds [  58  ] = CRGB (255,0,0);
leds [  69  ] = CRGB (255,0,0);
leds [  70  ] = CRGB (255,0,0);
leds [  71  ] = CRGB (255,0,0);
leds [  72  ] = CRGB (255,0,0);
leds [  87  ] = CRGB (255,0,0);
leds [  88  ] = CRGB (255,0,0);
leds [  89  ] = CRGB (255,0,0);
leds [  90  ] = CRGB (255,0,0);
leds [  91  ] = CRGB (255,0,0);
leds [  92  ] = CRGB (255,0,0);
leds [  93  ] = CRGB (255,0,0);
leds [  94  ] = CRGB (255,0,0);
leds [  95  ] = CRGB (255,0,0);
leds [  96  ] = CRGB (255,0,0);
leds [  97  ] = CRGB (255,0,0);
leds [  98  ] = CRGB (255,0,0);
leds [  99  ] = CRGB (255,0,0);
leds [  100 ] = CRGB (255,0,0);
leds [  101 ] = CRGB (255,0,0);
leds [  102 ] = CRGB (255,0,0);
leds [  103 ] = CRGB (255,0,0);
leds [  104 ] = CRGB (255,0,0);
leds [  119 ] = CRGB (255,0,0);
leds [  120 ] = CRGB (255,0,0);
leds [  121 ] = CRGB (255,0,0);
leds [  122 ] = CRGB (255,0,0);
leds [  123 ] = CRGB (255,0,0);
leds [  124 ] = CRGB (255,0,0);
leds [  125 ] = CRGB (255,0,0);
leds [  126 ] = CRGB (255,0,0);
leds [  127 ] = CRGB (255,0,0);
leds [  128 ] = CRGB (255,0,0);
leds [  129 ] = CRGB (255,0,0);
leds [  130 ] = CRGB (255,0,0);
leds [  131 ] = CRGB (255,0,0);
leds [  132 ] = CRGB (255,0,0);
leds [  133 ] = CRGB (255,0,0);
leds [  134 ] = CRGB (255,0,0);
leds [  135 ] = CRGB (255,0,0);
leds [  136 ] = CRGB (255,0,0);
   FastLED.show();
   delay(300);
   FastLED.clear();
leds [  12  ] = CRGB (0,255,0);
leds [  13  ] = CRGB (0,255,0);
leds [  14  ] = CRGB (0,255,0);
leds [  15  ] = CRGB (0,255,0);
leds [  16  ] = CRGB (0,255,0);
leds [  17  ] = CRGB (0,255,0);
leds [  18  ] = CRGB (0,255,0);
leds [  19  ] = CRGB (0,255,0);
leds [  44  ] = CRGB (0,255,0);
leds [  45  ] = CRGB (0,255,0);
leds [  46  ] = CRGB (0,255,0);
leds [  47  ] = CRGB (0,255,0);
leds [  48  ] = CRGB (0,255,0);
leds [  49  ] = CRGB (0,255,0);
leds [  50  ] = CRGB (0,255,0);
leds [  51  ] = CRGB (0,255,0);
leds [  76  ] = CRGB (0,255,0);
leds [  77  ] = CRGB (0,255,0);
leds [  78  ] = CRGB (0,255,0);
leds [  79  ] = CRGB (0,255,0);
leds [  80  ] = CRGB (0,255,0);
leds [  81  ] = CRGB (0,255,0);
leds [  82  ] = CRGB (0,255,0);
leds [  83  ] = CRGB (0,255,0);
leds [  108 ] = CRGB (0,255,0);
leds [  109 ] = CRGB (0,255,0);
leds [  110 ] = CRGB (0,255,0);
leds [  111 ] = CRGB (0,255,0);
leds [  112 ] = CRGB (0,255,0);
leds [  113 ] = CRGB (0,255,0);
leds [  114 ] = CRGB (0,255,0);
leds [  115 ] = CRGB (0,255,0);
leds [  140 ] = CRGB (0,255,0);
leds [  141 ] = CRGB (0,255,0);
leds [  142 ] = CRGB (0,255,0);
leds [  143 ] = CRGB (0,255,0);
leds [  144 ] = CRGB (0,255,0);
leds [  145 ] = CRGB (0,255,0);
leds [  146 ] = CRGB (0,255,0);
leds [  147 ] = CRGB (0,255,0);
leds [  172 ] = CRGB (0,255,0);
leds [  173 ] = CRGB (0,255,0);
leds [  174 ] = CRGB (0,255,0);
leds [  175 ] = CRGB (0,255,0);
leds [  176 ] = CRGB (0,255,0);
leds [  177 ] = CRGB (0,255,0);
leds [  178 ] = CRGB (0,255,0);
leds [  179 ] = CRGB (0,255,0);
leds [  192 ] = CRGB (0,255,0);
leds [  193 ] = CRGB (0,255,0);
leds [  194 ] = CRGB (0,255,0);
leds [  195 ] = CRGB (0,255,0);
leds [  196 ] = CRGB (0,255,0);
leds [  197 ] = CRGB (0,255,0);
leds [  198 ] = CRGB (0,255,0);
leds [  199 ] = CRGB (0,255,0);
leds [  200 ] = CRGB (0,255,0);
leds [  201 ] = CRGB (0,255,0);
leds [  202 ] = CRGB (0,255,0);
leds [  203 ] = CRGB (0,255,0);
leds [  204 ] = CRGB (0,255,0);
leds [  205 ] = CRGB (0,255,0);
leds [  206 ] = CRGB (0,255,0);
leds [  207 ] = CRGB (0,255,0);
leds [  208 ] = CRGB (0,255,0);
leds [  209 ] = CRGB (0,255,0);
leds [  210 ] = CRGB (0,255,0);
leds [  211 ] = CRGB (0,255,0);
leds [  212 ] = CRGB (0,255,0);
leds [  213 ] = CRGB (0,255,0);
leds [  214 ] = CRGB (0,255,0);
leds [  215 ] = CRGB (0,255,0);
leds [  216 ] = CRGB (0,255,0);
leds [  217 ] = CRGB (0,255,0);
leds [  218 ] = CRGB (0,255,0);
leds [  219 ] = CRGB (0,255,0);
leds [  220 ] = CRGB (0,255,0);
leds [  221 ] = CRGB (0,255,0);
leds [  222 ] = CRGB (0,255,0);
leds [  223 ] = CRGB (0,255,0);
leds [  224 ] = CRGB (0,255,0);
leds [  225 ] = CRGB (0,255,0);
leds [  226 ] = CRGB (0,255,0);
leds [  227 ] = CRGB (0,255,0);
leds [  228 ] = CRGB (0,255,0);
leds [  229 ] = CRGB (0,255,0);
leds [  230 ] = CRGB (0,255,0);
leds [  231 ] = CRGB (0,255,0);
leds [  232 ] = CRGB (0,255,0);
leds [  233 ] = CRGB (0,255,0);
leds [  234 ] = CRGB (0,255,0);
leds [  235 ] = CRGB (0,255,0);
leds [  236 ] = CRGB (0,255,0);
leds [  237 ] = CRGB (0,255,0);
leds [  238 ] = CRGB (0,255,0);
leds [  239 ] = CRGB (0,255,0);
leds [  240 ] = CRGB (0,255,0);
leds [  241 ] = CRGB (0,255,0);
leds [  242 ] = CRGB (0,255,0);
leds [  243 ] = CRGB (0,255,0);
leds [  244 ] = CRGB (0,255,0);
leds [  245 ] = CRGB (0,255,0);
leds [  246 ] = CRGB (0,255,0);
leds [  247 ] = CRGB (0,255,0);
leds [  248 ] = CRGB (0,255,0);
leds [  249 ] = CRGB (0,255,0);
leds [  250 ] = CRGB (0,255,0);
leds [  251 ] = CRGB (0,255,0);
leds [  252 ] = CRGB (0,255,0);
leds [  253 ] = CRGB (0,255,0);
leds [  254 ] = CRGB (0,255,0);
leds [  255 ] = CRGB (0,255,0);
   FastLED.show();
   delay(300);
   FastLED.clear();
   }
   t=0;
  Serial.write('W');
  }   
}


void RedSquareBlink()  {

  while (state == 'D') {
  FastLED.clear();
  fill_solid (leds, NUM_LEDS, CRGB::Red);
  FastLED.setBrightness(BRIGHTNESS);
  FastLED.show();
  delay(500);
  FastLED.clear();
  FastLED.show();
  delay(500);
  Serial.write('S');
  }   
}


void Clear()  {

  while (state == 'N') {
  FastLED.clear();
  fill_solid (leds, NUM_LEDS, CRGB::Blue);
  FastLED.setBrightness(BRIGHTNESS);
  FastLED.show();
  delay(500);
  FastLED.clear();
  FastLED.show();
  delay(500);
  Serial.write('C'); 
}
}
